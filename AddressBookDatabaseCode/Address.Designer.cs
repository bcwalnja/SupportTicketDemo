//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
using System;
using DevExpress.Xpo;
using DevExpress.Xpo.Metadata;
using DevExpress.Data.Filtering;
using System.Collections.Generic;
using System.ComponentModel;
using System.Reflection;
namespace SupportTicketDemo.DAL.Database
{

    [Persistent(@"tblAddress")]
    public partial class Address : XPObject
    {
        string fFirstName;
        [Size(SizeAttribute.Unlimited)]
        [Persistent(@"tx_firstName")]
        public string FirstName
        {
            get { return fFirstName; }
            set { SetPropertyValue<string>(nameof(FirstName), ref fFirstName, value); }
        }
        string fLastName;
        [Size(SizeAttribute.Unlimited)]
        [Persistent(@"tx_lastName")]
        public string LastName
        {
            get { return fLastName; }
            set { SetPropertyValue<string>(nameof(LastName), ref fLastName, value); }
        }
        string fBusiness;
        [Size(SizeAttribute.Unlimited)]
        [Persistent(@"tx_business")]
        public string Business
        {
            get { return fBusiness; }
            set { SetPropertyValue<string>(nameof(Business), ref fBusiness, value); }
        }
        string fAddress1;
        [Size(SizeAttribute.Unlimited)]
        [Persistent(@"tx_address1")]
        public string Address1
        {
            get { return fAddress1; }
            set { SetPropertyValue<string>(nameof(Address1), ref fAddress1, value); }
        }
        string fAddress2;
        [Size(SizeAttribute.Unlimited)]
        [Persistent(@"tx_address2")]
        public string Address2
        {
            get { return fAddress2; }
            set { SetPropertyValue<string>(nameof(Address2), ref fAddress2, value); }
        }
        string fCity;
        [Size(SizeAttribute.Unlimited)]
        [Persistent(@"tx_city")]
        public string City
        {
            get { return fCity; }
            set { SetPropertyValue<string>(nameof(City), ref fCity, value); }
        }
        string fState;
        [Size(SizeAttribute.Unlimited)]
        [Persistent(@"tx_state")]
        public string State
        {
            get { return fState; }
            set { SetPropertyValue<string>(nameof(State), ref fState, value); }
        }
        string fZip;
        [Size(SizeAttribute.Unlimited)]
        [Persistent(@"tx_zip")]
        public string Zip
        {
            get { return fZip; }
            set { SetPropertyValue<string>(nameof(Zip), ref fZip, value); }
        }
        string fPhone;
        [Size(SizeAttribute.Unlimited)]
        [Persistent(@"tx_phone")]
        public string Phone
        {
            get { return fPhone; }
            set { SetPropertyValue<string>(nameof(Phone), ref fPhone, value); }
        }
        string fFax;
        [Size(SizeAttribute.Unlimited)]
        [Persistent(@"tx_fax")]
        public string Fax
        {
            get { return fFax; }
            set { SetPropertyValue<string>(nameof(Fax), ref fFax, value); }
        }
        int fCopies;
        [Persistent(@"int_copies")]
        public int Copies
        {
            get { return fCopies; }
            set { SetPropertyValue<int>(nameof(Copies), ref fCopies, value); }
        }
        string fNotes;
        [Size(SizeAttribute.Unlimited)]
        [Persistent(@"tx_notes")]
        public string Notes
        {
            get { return fNotes; }
            set { SetPropertyValue<string>(nameof(Notes), ref fNotes, value); }
        }
        bool fIsBusiness;
        [Persistent(@"yn_isBusiness")]
        public bool IsBusiness
        {
            get { return fIsBusiness; }
            set { SetPropertyValue<bool>(nameof(IsBusiness), ref fIsBusiness, value); }
        }
        bool fFlagged;
        [Persistent(@"yn_flagged")]
        public bool Flagged
        {
            get { return fFlagged; }
            set { SetPropertyValue<bool>(nameof(Flagged), ref fFlagged, value); }
        }
        string fTagCsv;
        [Size(SizeAttribute.Unlimited)]
        [SupportTicketDemo.DAL.Classes.ExcludeFromImport]
        public string TagCsv
        {
            get { return fTagCsv; }
            set { SetPropertyValue<string>(nameof(TagCsv), ref fTagCsv, value); }
        }
        string fSourceCsv;
        [Size(SizeAttribute.Unlimited)]
        public string SourceCsv
        {
            get { return fSourceCsv; }
            set { SetPropertyValue<string>(nameof(SourceCsv), ref fSourceCsv, value); }
        }
        DateTime fCreated;
        [Persistent(@"dt_created")]
        public DateTime Created
        {
            get { return fCreated; }
            set { SetPropertyValue<DateTime>(nameof(Created), ref fCreated, value); }
        }
        bool fActive;
        [Persistent(@"yn_active")]
        [ColumnDefaultValue(true)]
        public bool Active
        {
            get { return fActive; }
            set { SetPropertyValue<bool>(nameof(Active), ref fActive, value); }
        }
        bool fDeleted;
        [Persistent(@"yn_deleted")]
        [ColumnDefaultValue(false)]
        public bool Deleted
        {
            get { return fDeleted; }
            set { SetPropertyValue<bool>(nameof(Deleted), ref fDeleted, value); }
        }
        [Association(@"SourceReferencesAddress")]
        public XPCollection<Source> Sources { get { return GetCollection<Source>(nameof(Sources)); } }
        [Association(@"AddressReferencesTag")]
        public XPCollection<Tag> Tags { get { return GetCollection<Tag>(nameof(Tags)); } }
        [Association(@"IssueReferencesAddress")]
        public XPCollection<Issue> Issues { get { return GetCollection<Issue>(nameof(Issues)); } }
        [Association(@"SubscriptionReferencesAddress")]
        public XPCollection<Subscription> Subscriptions { get { return GetCollection<Subscription>(nameof(Subscriptions)); } }
        [Association(@"ChangeReferencesAddress")]
        public XPCollection<AddressChange> Changes { get { return GetCollection<AddressChange>(nameof(Changes)); } }
    }

}
